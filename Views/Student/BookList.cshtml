@using PagedList;
@using PagedList.Mvc;

@model IPagedList<LibraryManagement5.Context.Book>
@{
    ViewBag.Title = "All Books";
    LibraryManagement5.Context.LibraryEntities15 dbo = new LibraryManagement5.Context.LibraryEntities15();
    LibraryManagement5.Context.Book db = new LibraryManagement5.Context.Book();
    LibraryManagement5.Context.Borrow dbborrow = new LibraryManagement5.Context.Borrow();
    var userID = ViewData["userId"];
}

<h2>All Books</h2>
<br />
<div>
    <table class="table table-hover">
        <tr>
            @using (Html.BeginForm("BookList", "Student", FormMethod.Get))
            {
                <td>
                    <b>Search By: </b>
                    &nbsp;
                    @Html.RadioButton("searchBy", "Book Name", true) Book Name
                    &nbsp;
                    @Html.RadioButton("searchBy", "Author") Author
                    &nbsp;
                    @Html.RadioButton("searchBy", "Available Books") Available Books
                </td>
                <td></td>
                <td></td>
                <td></td>
                <td>
                    @Html.TextBox("search") <button type="submit" class="btn btn-primary" value="Search">Search</button>
                </td>
            }
        </tr>
        <tr>
            <th>@Html.ActionLink("Book Name", "BookList", new { sortBy = ViewBag.SortByBookName, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] })</th>
            <th>@Html.ActionLink("Author", "BookList", new { sortBy = ViewBag.SortByAuthor, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] })</th>
            <th>@Html.ActionLink("Quantity", "BookList", new { sortBy = ViewBag.SortByQuantity, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] } )</th>
            <th>Status</th>
            <th></th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td colspan="3">No rows match search criteria!</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>@item.BookName</td>
                    <td>@item.Author</td>
                    <td>@item.Quantity</td>
                    @if (item.Quantity.Equals("0"))
                    {
                           var res = dbo.Books.Where(x => x.id == item.id).First();
                           res.BookStatus = "Not Available";
                    <td>@res.BookStatus</td>
                    }
                    else
                    {
                    <td>@item.BookStatus</td>
                    }
                    @if (item.Quantity.Equals("0"))
                    {
                    <td>
                         <a href="@Url.Action("#", new { @item.id, item.BookName, item.Author, item.Quantity })" class="btn btn-success disabled">Borrow</a>
                    </td>
                    }
                    else
                    {
                        var res = new LibraryManagement5.Context.Borrow();
                        try
                        {
                             res = dbo.Borrows.Where(x => x.BookId == item.id && x.UserId == (int)userID).First();
                        }
                        catch(Exception ex)
                        {
                             res = null;
                        }
                        if (res != null)
                        {
                             <td id="btnAdd">
                                 <a href="@Url.Action("Borrow", new { @item.id, item.BookName, item.Author, item.Quantity, item.UsernameID })" class="btn btn-success disabled">Borrowed</a>
                                 <a href="@Url.Action("Return", new { @item.id, item.BookName, item.Author, item.Quantity, item.UsernameID })"  class="btn btn-warning">Return</a>
                             </td>
                        }
                        else
                        {
                             <td id="btnAdd">
                                 <a href="@Url.Action("Borrow", new { item.id, item.BookName, item.Author, item.Quantity, item.UsernameID })"  class="btn btn-success">Borrow</a>
                             </td>
                        }
                    }
                </tr>
            }
        }
    </table>
</div>
@Html.PagedListPager(Model, page => Url.Action("BookList", new { page, searchBy = Request.QueryString["searchBy"], search = Request.QueryString["search"] }),
    new PagedListRenderOptions() { Display = PagedListDisplayMode.IfNeeded, DisplayPageCountAndCurrentLocation = true, DisplayItemSliceAndTotal = true })


